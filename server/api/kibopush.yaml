---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: v1
  title: KiboPush API
  description: |
    Welcome to the KiboPush API documentation! Our API provides flexible tools that can be used in the creation of new, outstanding projects.
    Please note that this documentation refers to the API 1.0 version. API 2.0 version is currently under construction and will be released soon.

    Build something great!

    ## Basic Usage
    All KiboPush API requests start with `https://app.kibopush.com/api/`

    The next segment of the URI path depends on the type of request. For example:

    `https://app.kibopush.com/api/users/`

    to get information of logged in user.

    ## Authentication
    Each client will be given Authorization token which should be added to header of each http request. Almost all the routes are authenticated therefore token is required.

    In the next version of the API, we would automate the generation of this token for client applications. For now, this authorization token can be obtained from us on request. This token will expire within 4 days.

    ## Error Handling
    Errors are returned using standard HTTP error code syntax. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error (bad or missing parameters, not authenticated etc.), and codes in the 5xx range indicate an error with KiboPushâ€™s servers. Any additional info is included in the body of the return call, JSON-formatted.

  termsOfService: http://www.kibopush.com/privacy-policy

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: app.kibopush.com
basePath: /api
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  internalApiKey:
    type: apiKey
    in: header
    name: Authorization
################################################################################
#                                           Paths                              #
################################################################################
paths:

  /users/:
    post:
      description: Create a new customer support session
      consumes:
        - application/json
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: customerID
          in: formData
          description: The unique id of the customer
          type: string
          required: true
        - name: customerName
          in: formData
          description: The name of the customer
          type: string
          required: true
        - name: email
          in: formData
          description: The email address of the customer
          type: string
          required: true
        - name: country
          in: formData
          description: The country of the customer
          type: string
          required: true
        - name: phone
          in: formData
          description: The phone number of the customer
          type: string
          required: true
        - name: isMobile
          in: formData
          description: possible value, 'false' for web client and 'true' for mobile client
          type: string
          required: true
        - name: messagechannel
          in: formData
          description: The message channel (sub group) where support is required
          type: string
          required: true
        - name: session_id
          in: formData
          description: Unique id of the new session
          type: string
          required: true
        - name: departmentid
          in: formData
          description: The unique id of the department (group) where support is required
          type: string
          required: true
        - name: currentPage
          in: formData
          description: The title of the web page from where client wants to start support call (i.e. where web widget is installed)
          type: string
          required: true
        - name: requesttime
          in: formData
          description: The time when support call session is created
          type: string
          required: true
        - name: ipAddress
          in: formData
          description: The IP Address of client
          type: string
          required: true
        - name: companyid
          in: formData
          description: The unique id of the company of which the widget is used by client to do support call
          type: string
          required: true
        - name: socketid
          in: formData
          description: The socket.io unique id given to web widget
          type: string
          required: true
        - name: platform
          in: formData
          description: Shows if the visitor is on mobile application widget or web widget. Possible values are "web", and "mobile"
          type: string
          required: true
        - name: device
          in: formData
          description: Shows which mobile device it is, possible values are "android", "ios"
          type: string
          required: true
        - name: device_version
          in: formData
          description: Shows version of mobile device OS
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  User:
    description: Basic user information is stored here.
    type: object
    properties:
      _id:
        type: string
        description: Primary key or unique id given to each record
      name:
        type: string
        description: Full name of the user
      email:
        type: string
        description: This is optional. As authentication is done through Facebook, some users may not share their email address.
      locale:
        type: string
        description: Currently, we just store this value. Later, we would use it to provide more local experience.
      gender:
        type: string
        description: The values for this depends on what we get from Facebook.
      provider:
        type: string
        description: Currently, we are only doing authentication with Facebook. Later, we will use other providers too. For now, default value for this is 'facebook'.
      timezone:
        type: string
        description: We get this value from Facebook.
      fbId:
        type: string
        description: This is the facebook id of the user who logged in with us.
      profilePic:
        type: string
        description: We store the URL of the facebook profile picture of user here.
      createdAt:
        type: string
        description: Date and time when this record was created.
      updatedAt:
        type: string
        description: Date and time when this record was last updated.

  Broadcast:
    type: object
    description: Broadcasts are the messages that we want to send to our facebook page audience. These can be platform specific. In v1, the platform value is 'facebook' only.
    properties:
      _id:
        description: Primary key or unique id given to each record
        type: string
      platform:
        type: string
        description: Name of the platform used for sending broadcast. In v1, the platform value is 'facebook' only.
      type:
        type: string
        description: This can be either text or attachment. In v1, we support text broadcasts only.
      text:
        type: string
        description: The value of text.
      userId:
        type: string
        description: User who sent this broadcast to his/her page audience.
      datetime:
        type: string
        description: Date and time when this record was created.

  Page_Broadcast:
    type: object
    description: This is broadcast and page association table. We would use this to know which broadcast was sent to audience of which page. We can send broadcasts to multiple pages.
    properties:
      pageId:
        type: string
        description: Primary key or unique id of the page.
      userId:
        type: string
        description: Primary key or user id of the user.
      broadcastId:
        type: string
        description: Primary key or unique id of the broadcast sent.
      datetime:
        type: string
        description: Date and time when this record was created.

  Page_Poll:
    type: object
    description: This is poll and page association table. We would use this to know which poll was sent to audience of which page. We can send polls to multiple pages.
    properties:
      pageId:
        type: string
        description: Primary key or unique id of the page.
      userId:
        type: string
        description: Primary key or user id of the user.
      pollId:
        type: string
        description: Primary key or unique id of the poll sent.
      datetime:
        type: string
        description: Date and time when this record was created.

  Page_Survey:
    type: object
    description: This is survey and page association table. We would use this to know which survey was sent to audience of which page. We can send survey to multiple pages.
    properties:
      pageId:
        type: string
        description: Primary key or unique id of the page.
      userId:
        type: string
        description: Primary key or user id of the user.
      surveyId:
        type: string
        description: Primary key or unique id of the survey sent.
      datetime:
        type: string
        description: Date and time when this record was created.

  Page:
    type: object
    description: Here we would store the pages of user which are either connected or not.
    properties:
      pageId:
        type: string
        description: Page id is the unique id of the facebook page provided to us by Facebook.
      pageName:
        type: string
        description: This is the name of the page.
      pagePic:
        type: string
        description: This is the display picture of the page.
      numberOfFollowers:
        type: string
        description: How many followers are following the page currently.
      likes:
        type: string
        description: How many likes a page has currently.
      connected:
        type: string
        description: Has user connected this page with KiboPush or not. If not connected, then user can't send broadcasts to followers of this page.
      userId:
        type: string
        description: The unique id of the user.

  Poll:
    type: object
    description: This is the main table for polls that are created to send to page audience in messenger.
    properties:
      _id:
        type: string
        description: The unique id of the record
      platform:
        type: string
        description: Name of the platform used for sending broadcast. In v1, the platform value is â€˜facebookâ€™ only.
      statement:
        type: string
        description: Full form for message (i.e. I donâ€™t know)
      options:
        type: string
        description: Unique id of the company
      userId:
        type: string
        description: Complete profile of the user who created the shortcut
      datetime:
        type: string
        description: Date of creation
      sent:
        type: integer
        description: Number of times this poll is sent

  Poll_Response:
    type: object
    description: Responses to the poll given by facebook page audience is stored here.
    properties:
      response:
        type: string
        description: Reponse text or body goes here
      pollId:
        type: string
        description: This is the poll id for which response is given
      subscriberId:
        type: string
        description: Subscriber Id is the id of facebook user who subscribed to your page and gave response to this poll.
      datetime:
        type: string
        description: Date of creation

  Subscriber:
    type: object
    description: Subscribers are the facebook users who follow your page. All the required information about them is stored in this table.
    properties:
      pageScopedId:
        type: string
        description: Every facebook user who subscribes a page gets page scoped id.
      firstName:
        type: string
        description: First name of the subscriber
      lastName:
        type: string
        description: Last name of the subscriber
      locale:
        type: string
        description: Locale of the subscriber
      timezone:
        type: string
        description: Current time zone of the subscriber
      email:
        type: string
        description: Email address of the subscriber
      gender:
        type: string
        description: Gender of the subscriber
      senderId:
        type: string
        description: Sender id of the subscriber is used to send message
      profilePic:
        type: string
        description: Profile picture of the subscriber. We only save the URL of the picture provided to us by Facebook.
      pageId:
        type: string
        description: Facebook Page Id of the page subscriber has followed.
      userId:
        type: string
        description: User Id of the admin of that page.

  Survey:
    type: object
    description: The record of the survey created by user. This is main table for survey. Other linked tables are Survey_Questions and Survey_Response
    properties:
      title:
        type: string
        description: Title of the survey
      description:
        type: string
        description: Detailed description of the survey
      image:
        type: string
        description: Image attached to survey
      userId:
        type: string
        description: User Id of the admin of that page.
      datetime:
        type: string
        description: Date of creation

  Survey_Response:
    type: object
    description: Here we store the responses coming for each question of the survey by subscribers
    properties:
      response:
        description: Text of the response.
        type: string
      surveyId:
        description: Unique id of the survey, question of which, answer belongs to
        type: string
      questionId:
        type: string
        description: Unique Id of the question to which answer belongs to
      subscriberId:
        type: string
        description: Unique id of facebook page follower who gave this answer
      datetime:
        type: string
        description: Date of creation

  Survey_Question:
    type: object
    description: Here we store the questions which belong to a survey. This table is associated with Survey table.
    properties:
      statement:
        description: This is the statement of the question
        type: string
      options:
        type: array
        items:
          type: string
          description: Answer options given for a question
      type:
        type: string
        description: Type of question, possible values are 'text', 'multichoice'
      surveyId:
        type: string
        description: Unique id of the survey to which question belongs
      datetime:
        type: string
        description: Date of creation

  Workflow:
    type: object
    description: This table is used to store workflows. This is an experimental feature in v1.
    properties:
      condition:
        description: Condition to trigger this workflow
        type: string
      keywords:
        type: array
        items:
          type: string
          description: Keywords are the words in the facebook page subscribers message which will trigger this workflow
      reply:
        type: string
        description: Reply which will be sent to user before triggerring the workflow
      userId:
        type: string
        description: Unique id of the user which creates workflow for his/her pages
      sent:
        type: integer
        description: Number of times this workflow is triggerred.
      isActive:
        type: boolean
        description: Whether this workflow is enabled or disabled
      datetime:
        type: string
        description: Date of creation

